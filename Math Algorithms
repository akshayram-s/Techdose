1)Count Primes

class Solution {
public:
    int countPrimes(int n) {
        vector<bool> prime(n+1,true);
        prime[1]=false;
        for(int i=2;i*i<=n;i++){
            if(i>2 && i%2==0)
                continue;
            if(prime[i]){
                for(int j=i*i;j<n+1;j+=i)
                    prime[j]=false;
            }
        }
        int count=0;
        for(int i=2;i<n;i++){
            if(prime[i])
            {
                count++;
            }
        }
        return count;
    }
};


3)Pow(x,n)

class Solution {
public:
    double myPow(double x, int n) {
          if(n==0){
          return 1.0;
      }
      double res=1.0;
      long long num=abs((long long) n);
      while(num>0){
          if(num%2==1){
              res*=x;
          }
          x*=x;
          num/=2;
      }
      if(n<0){
          return 1.0/res;
      }
      else{
          return res;
      }
    }
};

7)Unique Binary Search Trees

class Solution {
public:
    int numTrees(int n) {
        int dp[n+1];
        dp[0]=1;
        for(int i=1;i<=n;i++){
            dp[i]=0;
            for(int j=0;j<i;j++){
                dp[i]+=dp[j]*dp[i-j-1];
            }
        }
        return dp[n];
    }
};
