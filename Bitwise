Leetcode 

136) Single Number 
class Solution {
      public:
        int singleNumber(vector<int>& nums) {
            int num=nums[0];
            for(int i=1;i<nums.size();i++){
              num=num^nums[i];
            }
            return num;
        }
};

137) Single Number II
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int n=nums.size();
		int ones=0,twos=0;
		for(int i=0;i<n;i++){
			ones=(~twos)&(ones^nums[i]);
            twos=(~ones)&(twos^nums[i]);
		}
		return ones;
    }
};

201) Bitwise AND of Numbers Range
class Solution {
public:
    int rangeBitwiseAnd(int left, int right) {
        if(left==right){
            return left;
        }
        for(long long int i=left;i<=right;i++){
            left=left&i;
            if(left==0)
                return left;
        }
        return left;
    }
};
